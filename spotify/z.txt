To make your PHP project more organized and easy to navigate, it’s a great idea to separate the database connection, the dashboard page, and other functionalities into different files. This approach will improve the maintainability of your code, making it easier to scale and manage in the future.

Here's how you can organize your project into a more structured layout:

---

### 1. **Directory Structure**

Let’s start by creating a clean directory structure for your project:

```
my_dashboard/
│
├── assets/
│   └── css/              # For custom stylesheets (optional)
│
├── includes/
│   └── db.php            # Database connection
│   └── header.php        # Header for navigation (optional)
│   └── footer.php        # Footer content (optional)
│
├── index.php             # Main dashboard page
└── config.php            # For configuration settings (optional)
```

---

### 2. **Separation of Concerns**

Let’s break the components into smaller, modular files.

---

#### **File 1: `includes/db.php` (Database Connection)**

This file will handle the database connection. It will be included in any file that needs to interact with the database.

```php
<?php
// db.php - Database connection

$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'dashboard_db'; // The name of your database

try {
    // Create a PDO connection
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>
```

---

#### **File 2: `includes/header.php` (Optional Header)**

This file will contain the header content (like navigation or title). You can include it in your main `index.php` to make your project more modular.

```php
<!-- header.php -->
<header>
    <nav>
        <ul>
            <li><a href="index.php">Home</a></li>
            <li><a href="about.php">About</a></li>
            <!-- Add more links here -->
        </ul>
    </nav>
</header>
```

---

#### **File 3: `includes/footer.php` (Optional Footer)**

You can include the footer in any page by including this file. It could include copyright information, footer navigation, or any other details you want at the bottom of your pages.

```php
<!-- footer.php -->
<footer>
    <p>&copy; <?php echo date('Y'); ?> My Dashboard. All rights reserved.</p>
</footer>
```

---

#### **File 4: `index.php` (Main Dashboard Page)**

This is the main page of your dashboard. It will fetch the data from the database and display it using the modular `db.php` file.

```php
<?php
// Include the database connection
include('includes/db.php');

// Fetch data from the users table
$stmt = $pdo->query('SELECT * FROM users');
$users = $stmt->fetchAll(PDO::FETCH_ASSOC);

// Include the header
include('includes/header.php');
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link rel="stylesheet" href="assets/css/style.css"> <!-- Your styles -->
</head>
<body>

    <div class="container">
        <h1>User Dashboard</h1>

        <h2>User List</h2>
        <table>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Email</th>
                <th>Role</th>
                <th>Created At</th>
            </tr>

            <?php foreach ($users as $user): ?>
                <tr>
                    <td><?php echo htmlspecialchars($user['id']); ?></td>
                    <td><?php echo htmlspecialchars($user['name']); ?></td>
                    <td><?php echo htmlspecialchars($user['email']); ?></td>
                    <td><?php echo htmlspecialchars($user['role']); ?></td>
                    <td><?php echo htmlspecialchars($user['created_at']); ?></td>
                </tr>
            <?php endforeach; ?>
        </table>
    </div>

    <!-- Include the footer -->
    <?php include('includes/footer.php'); ?>

</body>
</html>
```

---

#### **File 5: `assets/css/style.css` (Styling)**

In this file, you can place your custom CSS to style the dashboard page and any other pages you create. Here's an example of basic styling:

```css
/* style.css */
body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    margin: 0;
    padding: 0;
}

header {
    background-color: #333;
    color: white;
    padding: 15px;
    text-align: center;
}

nav ul {
    list-style-type: none;
}

nav ul li {
    display: inline;
    margin-right: 20px;
}

table {
    width: 80%;
    margin: 20px auto;
    border-collapse: collapse;
    background-color: white;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

th, td {
    padding: 12px;
    text-align: left;
    border-bottom: 1px solid #ddd;
}

th {
    background-color: #333;
    color: white;
}

tr:hover {
    background-color: #f1f1f1;
}

footer {
    text-align: center;
    padding: 10px;
    background-color: #333;
    color: white;
    position: fixed;
    width: 100%;
    bottom: 0;
}
```

---

### 3. **Optional: `config.php` for Configuration Settings**

If you want to make your database credentials or other settings configurable, you can create a `config.php` file.

```php
<?php
// config.php - Stores configuration settings

define('DB_HOST', 'localhost');
define('DB_USERNAME', 'root');
define('DB_PASSWORD', '');
define('DB_NAME', 'dashboard_db');
```

Then, you can modify `db.php` to use these constants:

```php
<?php
// db.php - Database connection

include('config.php');

try {
    // Create a PDO connection using constants from config.php
    $pdo = new PDO("mysql:host=" . DB_HOST . ";dbname=" . DB_NAME, DB_USERNAME, DB_PASSWORD);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>
```

---

### 4. **Accessing the Dashboard**

- Start XAMPP (Apache and MySQL) if not already running.
- Access your dashboard in the browser by visiting: `http://localhost/my_dashboard/`.

With this structure, you have:
- **`db.php`** to manage your database connection.
- **`header.php`** and **`footer.php`** for reusable content.
- **Modular `index.php`** for your dashboard logic.
- Organized **`assets/css`** folder for styles.

This will make it easier to manage your project as it grows and to add new pages or functionalities later.